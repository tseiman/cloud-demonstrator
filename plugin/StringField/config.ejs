
<style type="text/css">
 .stringField-NotOk {
  color: red;
 }
 .stringField-Ok {
  color: green;
 }

</style>
<div class="input-group mb-3">
  <div class="input-group-prepend">
    <span class="input-group-text config-group-fixed-width" id="basic-addon1">Data Source</span>
  </div>
  <input type="text" class="form-control stringField-text-input stringField-checkable" placeholder="data.source" aria-label="Data Source" aria-describedby="basic-addon1" accepted-input="^[0-9a-zA-Z\.\[\]]+$" isOk="false" name="datasource" value="<%- datasource %>">
  <div class="input-group-append">
    <span class="input-group-text"></span>
  </div>
</div>
<div class="input-group mb-3">
  <div class="input-group-prepend">
    <span class="input-group-text config-group-fixed-width" id="basic-addon1">Caption</span>
  </div>
  <input type="text" class="form-control stringField-text-input stringField-checkable" placeholder="Caption" aria-label="CAPTION" aria-describedby="basic-addon1" accepted-input="^.+$" isOk="false" name="caption"  value="<%- caption %>">
  <div class="input-group-append">
    <span class="input-group-text"></span>
  </div>
</div>
<div class="input-group mb-3">
  <div class="input-group-prepend">
    <span class="input-group-text config-group-fixed-width" id="basic-addon1">Background Color</span>
  </div>
  <input  class="form-control stringField-colorpick stringField-checkable" aria-describedby="basic-addon1" accepted-input="^rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d+(?:\.\d+)?))?\)$" isOk="true" name="bgColor" value='<%- bgColor %>' >
  <div class="input-group-append">
    <span class="input-group-text stringField-Ok">&#10003;</span>
  </div>
</div>
<div class="input-group mb-3">
  <div class="input-group-prepend">
    <span class="input-group-text config-group-fixed-width" id="basic-addon1">Font Color</span>
  </div>
  <input  class="form-control stringField-colorpick stringField-checkable" aria-describedby="basic-addon1" accepted-input="^rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d+(?:\.\d+)?))?\)$" isOk="true" name="color" value='<%- color %>' >
  <div class="input-group-append">
    <span class="input-group-text stringField-Ok">&#10003;</span>
  </div>
</div>
<div class="input-group mb-3">
  <div class="input-group-prepend">
    <span class="input-group-text config-group-fixed-width" id="basic-addon1">Unit</span>
  </div>
  <input type="text" class="form-control stringField-text-input stringField-checkable" placeholder="Â°C" aria-label="Data Source" aria-describedby="basic-addon1" accepted-input=".*" isOk="true" name="unit"  value='<%- unit %>'>
  <div class="input-group-append">
    <span class="input-group-text stringField-Ok">&#10003;</span>
  </div>
</div>
<script type="text/javascript">
  function stringFieldConfigIsAllOk() {
    var isOk = true;
    $( ".stringField-checkable" ).each(function( index ) {
        isOk = ($(this).attr("isOk") !== "false") && isOk;
        if($(this).attr("isOk") !== "false") {
          window.newWidget.setConfig($(this).attr("name"),$(this).val());          
        }
//          console.log("newWidget : ", window.newWidget);

    });
    if(!isOk) {    
      $('#btnConfWidgetNext').attr('disabled',true);
      return;
    }

    $('#btnConfWidgetNext').removeAttr('disabled');
  }

  function stringFieldConfigInputCheck(element,value) {
//    var editWidget = "<%- uuid %>";
    var match = RegExp($(element).attr("accepted-input")).test(value);

    if(match) {
      $(element).nextAll().find(".input-group-text").html("&#10003;").removeClass( "stringField-NotOk" ).addClass( "stringField-Ok" );
      $(element).attr("isOk","true");
    } else {
      $(element).nextAll().find(".input-group-text").html("&#10008;").removeClass( "stringField-Ok" ).addClass( "stringField-NotOk" );
      $(element).attr("isOk","false");
    }
    stringFieldConfigIsAllOk();
  }

  $(".stringField-text-input").on('input',function() {
    stringFieldConfigInputCheck(this, $(this).val());
  });

  $(".stringField-text-input").focusout(function() {
    stringFieldConfigInputCheck(this, $(this).val());
  });



  $(".stringField-colorpick").spectrum({
    showAlpha: true,
    showPalette:true,
    preferredFormat: "rgb",
    localStorageKey: "cloud-demonstrator.colorpick",
    clickoutFiresChange: true,
    change: function(color) {
    //      console.log(color.toRgbString()); // #ff0000
      stringFieldConfigInputCheck(this,color.toRgbString());
    }
  });


  $(".stringField-text-input").each(function(index) {
    stringFieldConfigInputCheck(this, $(this).val());
  });   


</script>

